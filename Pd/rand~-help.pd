#N canvas 465 40 567 558 10;
#X declare -stdpath ./;
#X obj 6 532 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 6 420 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 460 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 497 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 110 431 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 110 470 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X floatatom 254 185 0 0 0 0 - - - 0;
#X text 177 471 signal;
#X text 165 506 1) float;
#X obj 257 164 hsl 128 15 41.1 44100 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 233 471 - interpolated random noise signal;
#N canvas 799 179 409 317 random 0;
#X obj 137 140 expr~ $v1 * 300 + 800;
#X text 26 20 you can use [rand~] at a low frequency to generate random ramps up and down to control several parameters. Below \, it generates random glissandi.;
#X obj 137 180 osc~;
#X obj 137 104 cyclone/rand~ 1;
#X obj 137 225 output~;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 0 0;
#X restore 429 371 pd random control;
#X text 142 431 float/signal;
#X obj 254 208 cyclone/rand~ 441;
#X obj 89 263 cyclone/scope~ 130 130 16 3 128 -1 1 50 0 0 0 205 229 232 74 79 77 96 98 102 0 empty;
#X text 233 431 - sets frequency;
#X text 75 102 [rand~] generates random values between -1 and 1 at a given frequency \, interpolating linearly between the generated values. The resulting sound is a bandlimited noise.;
#X text 233 506 - sets initial frequency (default 0);
#X obj 499 69 cyclone/dsponoff~;
#X obj 254 270 output~;
#X obj 3 4 ./header rand~;
#X text 21 64 Interpolated bandlimited noise;
#X obj 251 355 declare -stdpath ./;
#X connect 6 0 13 0;
#X connect 9 0 6 0;
#X connect 13 0 14 0;
#X connect 13 0 19 0;
